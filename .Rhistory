setwd('~/R/r-class-1819/')
print('Hello World!!!')
b = chartr('oemsp', 'eol H', a)
b = chartr('oemsp', 'eol H', 'a')
b = chartr('oemsp', 'eol H', a)
a = 'pommes frites'
b = chartr('oemsp', 'eol H', a)
c = unlist(strsplit(b, ""))[c(1,3)]
strsplit(b, "")
c = unlist(strsplit(b, ""))[c(1,3)]
a = 'Pommes frites'
b = chartr('oemsp', 'eol H', a)
c = unlist(strsplit(b, ""))[c(1,3)]
a = 'pommes frites'
b = chartr('oemsp', 'eol H', a)
c = unlist(strsplit(b, ""))[c(1,3)]
d = as.numeric(chartoRaw(c))
d = as.numeric(charToRaw(c))
d = as.numeric(charToRaw(c[2]))
c = unlist(strsplit(b, " "))[c(1,3)]
d = as.numeric(charToRaw(c[2]))
e = rawToChar(as.raw(d + c(17, -3, 9, -8, -11)))
f = paste(c[1], e, '!!!')
library()
?? sin
?? as.numeric
?? as.numeric()
getwd()
save.image(file = 'day1.R')
save.image(file = 'day1.Rdata')
load("~/R/r-class-1819/day1.Rdata")
sink('class-20181008.txt')
pwd()
a
print(a)
echo(a)
print(a)
install.packages('moments')
# Code 3
g = floor(-2)
# Code 3
g = floor(-pi)
ls()
ls(2)
ls(3)
ls(sin)
rm(list = ls())
# Linear Algebra
A = matrix(c(1:5))
View(A)
?matrix
A.is.matrix
is.matrix(A)
print(is.matrix(A))
# Linear Algebra
A = matrix(c(1:5))
B = is.matrix(A)
C = matrix(c(1:5), nrow=1)
View(C)
View(C)
View(A)
View(A)
View(C)
View(C)
View(A)
View(A)
C = matrix(c(1:5), ncol=1)
View(C)
View(C)
# Linear Algebra
A = matrix(c(1:5)) # 5 Rows, 1 Column
B = matrix(c(1:5), nrow=1) # 1 Column, 5 Rows
C = matrix(c(1:5), ncol=1)
View(B)
View(B)
View(A)
View(A)
View(B)
View(B)
View(C)
View(C)
A_df = as.data.frame(A)
A_mat = as.matrix(A_df)
View(A_mat)
## Vectors
A_V = as.vector(A)
## Mathematical Functions
E = exp(2)
?exp
x = 1
y = 2
z= (a, b)
z(a, b)
c(a, b)
c(x,y)
vector_of_xy = c(x,y)
hundred = rep(1, 100)
hundred_times_one = rep(1, 100)
length(a)
## Accessing vector elements (slicing in python I guess)
a = c(2, 3, 1, 4)
length(a)
a[1:2]
a[-1]
a = 1:3
T = t(a) # transposes a to a Matrix
View(`T`)
## Constructing matrixes
matrix(1:12, nrow = 3)
## Constructing matrixes
M_three_row = matrix(1:12, nrow = 3)
M_three_row_T = matrix(1:12, row= 3, byrow = T)
M_three_row_T = matrix(1:12, nrow= 3, byrow = T)
View(M_three_row_T)
View(M_three_row)
View(M_three_row_T)
View(M_three_row)
## first task
first = "slumdog"
second = "millionaire"
# exercise day one
rm(list = ls()) # Cleans all variables
## first task
first = "slumdog"
second = "millionaire"
pase?
paste?
q
?paste
joint = paste(first, second)
joint = paste(first, second, sep=;)
joint = paste(first, second, sep=";")
joint = paste(first, second, sep="/r")
joint = paste(first, second, sep="\n")
print(joint)
print(joint)
joint = paste(first, second, sep=" ")
joint = paste(first, second, sep="\n")
cat(joint)
print(joint)
sink()
print(joint)
joint = paste(first, second, sep=" ")
print(joint)
joint = paste(first, second, sep="/n")
print(joint)
## second task
a = [1,3,5,7,11,13,17,19]
## second task
a = c(1,3,5,7,11,13,17,19)
## second task
a = c(1,3,5,7,11,13,17,19).t
## second task
a = t(c(1,3,5,7,11,13,17,19))
?seq
## third task
b = 2^(2:8)
## third task
b = 2^(1:8)
## fourth task
c = (1:8)^2
## fifth task
which(b == c)
## fifth task
coincide_b_c = which(b == c)
## sixth task
M = c(b,c)
dim(A)
dim(M)
## sixth task
M = c(b,c)
dim(M)
?dim
M[7]
View(a)
View(a)
## sixth task
M = cbind(b,c)
View(M)
## sixth task
M.c = cbind(b,c)
M.c[c]
View(M.c)
# exercise day one
rm(list = ls()) # Cleans all variables
## first task
first = "slumdog"
second = "millionaire"
joint = paste(first, second, sep="\n")
print(joint)
## second task
a = t(c(1,3,5,7,11,13,17,19))
## third task
b = 2^(1:8)
## fourth task
c = (1:8)^2
## fifth task
coincide_b_c = which(b == c)
## sixth task
M.c = cbind(b,c)
M.c[c]
joint = cat(first, second, sep="\n")
joint = paste(first, second, sep=" ")
joint_again = cat(first, second, sep="\n")
joint = paste(first, second, sep=" ")
print(joint)
M.c[c]
M.c[b]
subset?
()
?subset
M.c[b, ]
M.c["b", ]
M.c["b", ]
rownames(M.c) = c("B", "C")
dim(M.c)
col(M.c)
dimnames(M.c)
M.c[, "b"]
print(dim(M.c))
M.c[7, ]
## seventh task
M.r = rbind(a, b)
rownames(M.r) = ["a", "b"]
rownames(M.r) = c("a", "b"()
rownames(M.r) = c("a", "b")
## seventh task
M.r = rbind(a, b)
rownames(M.r) = c("a", "b")
View(M.r)
columnnames(M.r)
colnnames(M.r) = rawToChar(seq(19,26))
colnnames(M.r) = toString(seq(19,26))
toString(seq(19,26))
rawToChar(seq(19,26))
rawToChar(1)
rawToChar(as.raw(1))
rawToChar(as.raw(19))
rawToChar(as.raw(222))
rawToChar(as.raw(2222))
seq(19,26))
seq(19,26)
Letters(seq(19,26))
letters(seq(19,26))
letters(19)
LETTERS(19)
LETTERS(19)
LETTERS[1]
LETTERS[seq(19,26)]
colnames(M.r) = LETTERS[seq(19,26)]
View(M.r)
## eighth task
M.r[, LETTERS[setdiff(24,seq(19,26))]]
## eighth task
print(M.r[, LETTERS[setdiff(24,seq(19,26))]])
## eighth task
Q = M.r[, LETTERS[setdiff(24,seq(19,26))]]
View(Q)
View(Q)
## eighth task
Q = M.r[, LETTERS[seq(19,26)]]
(19:26)[seq(19,26)]
(1:7)[seq(19,26)]
(1)[seq(19,26)]
[seq(19,26)][1]
[seq(19,26)](1)
seq(19,26)(1)
seq(19,26)[1]
seq(19,26)[1:6]
setdiff(1:85,seq(1,85,5))
setdiff(1:10,seq(1,5))
setdiff(1:10,5)
## eighth task
Q = M.r[, LETTERS[setdiff(seq(19,26),5)]]
View(Q)
## eighth task
Q = M.r[, LETTERS[setdiff(seq(19,26),5)]]
## seventh task
M.r = rbind(a, b)
rownames(M.r) = c("a", "b")
colnames(M.r) = LETTERS[seq(19,26)]
## eighth task
Q = M.r[, LETTERS[setdiff(seq(19,26),5)]]
View(Q)
## eighth task
Q = M.r[, LETTERS[setdiff(seq(19,26),1)]]
View(Q)
View(Q)
View(M.r)
View(Q)
View(M.r)
setdiff(seq(19,26),1)
setdiff(seq(19,26),25)
## eighth task
Q = M.r[, LETTERS[setdiff(seq(19,26),24)]]
## eighth task
Q = M.r[, LETTERS[setdiff(seq(19,26),23)]]
## seventh task
M.r = rbind(a, b)
rownames(M.r) = c("a", "b")
colnames(M.r) = LETTERS[seq(19,26)]
## eighth task
Q = M.r[, LETTERS[setdiff(seq(19,26),23)]]
View(Q)
which(Q > 12)
## nineth task
pos = which(Q > 12)
## nineth task
pos = which(M.r > 12)
pos
M.r(pos)
M.r[pos]
## tenth task
d = c(1:100)
print(d)
## tenth task
grid = seq(-3,3,by = 0.5)
vals = exp(-1*grid)
e = rep(7,100)
